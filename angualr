Important File And Folders
1)package.json :- In this file have details of your project, for example which command will start the project. Dependencies are also their.
2)node_modules:-when you run the code npm install so this node file will rebuild.
3)src folder:-The most imp folder
  1)app:-This is component (component is piece of code which we can reuse)
  2)assets:-For storing images we use assets
  3)enviroments:-for publish project
  4)index.html:-This one file will load first of your project 
  5)main.js:-this file will use or store bootstrap to work angular html file
  6)style.css:- This is global file


What is Component :- Component is a building block. For specific functionality.
for creating component command line:- ng generate component componentname

Inline-Style:- ng generate component componentname --inline-style
inline-template:- ng generate component componentname --inline-template
for using both:- ng generate component componentname --inline-template --inline-style

Module :- ng generate module user-auth
To create component in module folder for example in user-auth, write below code:

Events in Angular:-
1)keyUp:- when we release the click so data will come
2)kedown: when we click the key then will the data will come
3)blur :  when we release the select then the value will come

In angular if you want to write if else condition write like below:
type==='add' ?this.count++:this.count--;

Ifelse Conditoon:-
*ngIf="show; then ifblock else elseblock" 

SwitchCase condition:
<div [ngSwitch]="color">
    <h1 *ngSwitch="'red'" style="color:red;">Red Color</h1>
    <h1 *ngSwitch="'green'" style="color:green;">Green Color</h1>
    <h1 *ngSwitchDefault>Unkown Color</h1>
</div>

Forloop :
ts file:
users=['Anil','Bhaker','sam','peter','bruce'];
  usersDetails=[
    {name:'Anil',email:'Anil@gmail.com',phone:'8888'},
    {name:'Bhaker',email:'Bhaker@gmail.com',phone:'1111'},
    {name:'sam',email:'sam@gmail.com',phone:'4569'},
    {name:'peter',email:'peter@gmail.com',phone:'3556'},
    {name:'bruce',email:'bruce@gmail.com',phone:'47894'}
  ];
html file:
<h3 *ngFor="let item of users">Name is : {{item}}</h3>
<h3 *ngFor="let item of usersDetails">{{item.name}}--{{item.email}}--{{item.phone}}</h3>

Todolist:-
ts.file:
list:any[]=[];
addTask(item:string)
  {
    this.list.push({id:this.list.length,name:item})
    console.warn(this.list);
  }
  removeTask(id:number)
  {
    console.warn(id)
    this.list=this.list.filter(item=>item.id!==id)
  }
html file:-
<input type="text" placeholder="Enter New Task" #task />
<br>
<button (click)="addTask(task.value)">Add Task</button>
<ul *ngFor="let item of list">
    <li>{{item.name}} <button (click)="removeTask(item.id)">Remove</button></li>
</ul>

Send Data Parent To Child Component:
child.html:
<h1>{{item}}</h1>
child.ts:
 @Input () item=0;
app.html:
<app-child [item]="data2"></app-child>
<button (click)="updateChild()">Update Child Component</button>
app.ts:
  data2=10;
  updateChild(){
    this.data2=Math.floor(Math.random()*10); 
  }


Reusable Component:

